#!/bin/bash

# Function to install packages and verify installation success
install_and_verify() {
    for package in "$@"; do
        if ! pacman -Qi "$package" &>/dev/null; then
            echo "Installing $package..."
            sudo pacman -S --noconfirm --needed "$package"
            if ! pacman -Qi "$package" &>/dev/null; then
                echo "ERROR: Failed to install $package. Exiting."
                exit 1
            fi
        else
            echo "$package is already installed."
        fi
    done
}

# Step 1: Update the system and install core packages
echo "Updating system and installing core packages..."
sudo pacman -Syu --noconfirm

install_and_verify base-devel gcc meson river wlroots wayland wayland-protocols libseat libdrm pango gtk-layer-shell cairo jsoncpp sddm kitty rofi waybar networkmanager feh ttf-dejavu ttf-liberation ttf-droid noto-fonts noto-fonts-emoji lxqt pcmanfm-qt qt5ct kvantum kvantum-theme-materia qogir-icon-theme pulseaudio pulseaudio-alsa pavucontrol pamixer xorg-xwayland

# Step 2: Install SDDM Nordic theme from AUR using yay
if ! pacman -Qi yay &>/dev/null; then
    echo "Installing yay (AUR helper)..."
    sudo pacman -S --noconfirm yay
fi

if ! yay -Qi sddm-nordic-theme-git &>/dev/null; then
    echo "Installing SDDM Nordic theme from AUR..."
    yay -S --noconfirm sddm-nordic-theme-git
else
    echo "SDDM Nordic theme is already installed."
fi

# Step 3: Enable and start NetworkManager
echo "Enabling and starting NetworkManager..."
sudo systemctl enable NetworkManager.service
sudo systemctl start NetworkManager.service

# Step 4: Configure SDDM with Nordic theme and custom gradient background
echo "Configuring SDDM with Nordic theme..."
sudo mkdir -p /etc/sddm.conf.d /usr/share/sddm/themes/nordic/custom_backgrounds

# Set SDDM to use the Nordic theme
sudo tee /etc/sddm.conf.d/theme.conf > /dev/null <<EOF
[Theme]
Current=nordic
EOF

# Create custom gradient background for SDDM theme
echo "Setting custom gradient background for SDDM theme..."
sudo tee /usr/share/sddm/themes/nordic/custom_backgrounds/gradient.svg > /dev/null <<EOF
<svg width="1920" height="1080" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <linearGradient id="grad1" x1="100%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" style="stop-color:yellow;stop-opacity:1" />
      <stop offset="100%" style="stop-color:purple;stop-opacity:1" />
    </linearGradient>
  </defs>
  <rect width="100%" height="100%" fill="url(#grad1)" />
  <text x="50%" y="60%" font-family="monospace" font-size="80" fill="black" text-anchor="middle">Stickman-OS</text>
</svg>
EOF

# Enable SDDM to start on boot
echo "Enabling SDDM to start on boot..."
sudo systemctl enable sddm.service
sudo systemctl start sddm.service

# Step 5: Create a custom session file for River in SDDM
echo "Setting up River session in SDDM..."
sudo tee /usr/share/wayland-sessions/river.desktop > /dev/null <<EOF
[Desktop Entry]
Name=River
Comment=River Window Manager
Exec=/usr/bin/river
Type=Application
DesktopNames=river
EOF

# Step 6: Configure Waybar with Stickman icon, modern, fully rounded theme, and floating bar
echo "Setting up Waybar configuration..."
mkdir -p ~/.config/waybar ~/.config/waybar/icons

# Generate a simple SVG stickman icon for Waybar
tee ~/.config/waybar/icons/stickman.svg > /dev/null <<EOF
<svg width="24" height="24" xmlns="http://www.w3.org/2000/svg">
  <circle cx="12" cy="5" r="3" fill="black" />
  <line x1="12" y1="8" x2="12" y2="16" stroke="black" stroke-width="2" />
  <line x1="12" y1="10" x2="9" y2="13" stroke="black" stroke-width="2" />
  <line x1="12" y1="10" x2="15" y2="13" stroke="black" stroke-width="2" />
  <line x1="12" y1="16" x2="10" y2="20" stroke="black" stroke-width="2" />
  <line x1="12" y1="16" x2="14" y2="20" stroke="black" stroke-width="2" />
</svg>
EOF

# Waybar configuration without battery module
tee ~/.config/waybar/config.json > /dev/null <<EOF
{
    "layer": "top",
    "position": "top",
    "height": 35,
    "margin": 10,
    "modules-left": ["custom/stickman", "workspaces"],
    "modules-center": ["clock"],
    "modules-right": ["custom/notifications", "cpu", "memory", "network", "custom/volume", "custom/microphone", "custom/power"],

    "custom/stickman": {
        "exec": "echo ' '",
        "return-type": "json",
        "tooltip": "Applications",
        "click": "rofi -show drun",
        "icon": "~/.config/waybar/icons/stickman.svg"
    },
    
    "workspaces": {
        "format": "{icon}",
        "icon-map": {
            "1": "", "2": "", "3": "", "4": "",
            "5": "", "6": "", "7": "", "8": "", "9": ""
        },
        "on-click": "riverctl switch-to-workspace {name}",
        "underline": true,
        "max-icons": 9
    },

    "clock": {
        "format": "{:%A, %B %d - %H:%M}",
        "interval": 60
    },

    "custom/notifications": {
        "exec": "notify-send 'No new notifications'",
        "return-type": "json",
        "click": "notify-send 'Checking notifications...'",
        "tooltip": "Notifications"
    },

    "cpu": {
        "format": "CPU: {usage}%",
        "tooltip-format": "CPU: {usage}%"
    },

    "memory": {
        "format": "RAM: {usedMem} MB",
        "tooltip-format": "Memory Used: {usedMem} MB"
    },

    "network": {
        "format": "{ifname} {ipaddr}",
        "tooltip-format": "Connected to {ifname} with IP {ipaddr}"
    },

    "custom/volume": {
        "exec": "pamixer --get-volume-human",
        "interval": 2,
        "return-type": "json",
        "icon": "audio-volume-high-symbolic",
        "tooltip": "Volume"
    },

    "custom/microphone": {
        "exec": "pamixer --default-source --get-volume-human",
        "interval": 2,
        "return-type": "json",
        "icon": "microphone-sensitivity-high-symbolic",
        "tooltip": "Microphone"
    },

    "custom/power": {
        "exec": "echo ''",
        "return-type": "json",
        "tooltip": "Power Options",
        "click": "rofi -show power-menu -modi power-menu:rofi-power-menu"
    },

    "style": {
        "bar": {
            "background": "#1E1E2EAA",
            "border-radius": 20,
            "padding": 8,
            "margin": 20
        },
        "separator": {
            "background": "#1E1E2EAA"
        }
    }
}
EOF

echo "Script completed successfully. All components should be installed and configured correctly."
